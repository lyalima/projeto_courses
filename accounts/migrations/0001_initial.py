# Generated by Django 4.2 on 2024-06-21 14:01

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import multipleselectionfield.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=50, verbose_name='Nome Completo')),
                ('cpf', models.CharField(max_length=14, verbose_name='CPF')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('email', models.EmailField(max_length=100)),
                ('email_verified', models.BooleanField(blank=True, default=False, null=True, verbose_name='Email Verificado')),
                ('verification_code', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, verbose_name='Código')),
                ('telephone', models.CharField(max_length=16, verbose_name='Telefone')),
                ('zip_code', models.CharField(max_length=9, verbose_name='CEP')),
                ('address', models.CharField(max_length=50, verbose_name='Endereço')),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='Número')),
                ('neighborhood', models.CharField(max_length=50, verbose_name='Bairro')),
                ('city', models.CharField(max_length=50, verbose_name='Cidade')),
                ('state', models.CharField(max_length=2, verbose_name='Estado')),
                ('education', models.CharField(choices=[('Fundamental Completo', 'Fundamental Completo'), ('Fundamental em Andamento', 'Fundamental em Andamento'), ('Fundamental Incompleto', 'Fundamental Incompleto'), ('Médio Completo', 'Médio Completo'), ('Médio em Andamento', 'Médio em Andamento'), ('Médio Incompleto', 'Médio Incompleto'), ('Superior Completo', 'Superior Completo'), ('Superior em Andamento', 'Superior em Andamento'), ('Superior Incompleto', 'Superior Incompleto')], max_length=30, verbose_name='Escolaridade')),
                ('areas_of_interest', multipleselectionfield.db.fields.MultipleSelectionField(blank=True, choices=[('Administração', 'Administração'), ('Contabilidade', 'Contabilidade'), ('Direito', 'Direito'), ('Economia', 'Economia'), ('Estética', 'Estetica'), ('Finanças', 'Finanças'), ('Gastronomia', 'Gastronomia'), ('Humanidades', 'Humanidades'), ('Linguagens', 'Linguagens'), ('Massoterapia', 'Massoterapia'), ('Saúde', 'Saúde'), ('Tecnologia da Informação', 'Tecnologia da Informação')], max_length=50, null=True, verbose_name='Áreas de Interesse')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='profile/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_courses', models.ManyToManyField(related_name='courses', to='courses.course')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
